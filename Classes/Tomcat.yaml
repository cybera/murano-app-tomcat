#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: ca.cybera.apache
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  conf: io.murano.configuration

Name: Tomcat

Extends: std:Application

Properties:
  instance:
    Contract: $.class(res:Instance).notNull()

Methods:
  .init:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for Tomcat ')
          - $securityGroupIngress:
              - ToPort: 80
                FromPort: 80
                IpProtocol: tcp
                External: true
              - ToPort: 8080
                FromPort: 8080
                IpProtocol: tcp
                External: true
              - ToPort: 443
                FromPort: 443
                IpProtocol: tcp
                External: true
              - ToPort: 80
                FromPort: 80
                IpProtocol: tcp
                External: true
                Ethertype: IPv6
              - ToPort: 8080
                FromPort: 8080
                IpProtocol: tcp
                External: true
                Ethertype: IPv6
              - ToPort: 443
                FromPort: 443
                IpProtocol: tcp
                External: true
                Ethertype: IPv6
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()
          # Deploy Apache Tomcat
          - $._environment.reporter.report($this, 'Instance is created. Deploying Tomcat')
          - $file: sys:Resources.string('deployTomcat.sh')
          - conf:Linux.runCommand($.instance.agent, $file, helpText => 'Deploy Tomcat')

          - If: $.instance.assignFloatingIp
            Then:
              - $address: format('http://{0}', $.instance.floatingIpAddress)
            Else:
              - $address: $.instance.ipAddresses.selectMany(
                  switch(
                    $.matches("[a-f]+") => format('[{0}]', $),
                    true => $
                  )).select(format('http://{0}:8080/', $)).join(', ')
          - $._environment.reporter.report($this, 'Tomcat is available at {0}'.format($address))
          - $.setAttr(deployed, true)
